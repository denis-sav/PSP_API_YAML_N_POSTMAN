openapi: 3.0.3
info:
  title: Point of Sale System API
  description: |-
    API for managing a Point of Sale system
  version: 1.0.0
paths:
  /{establishmentId}/orders:
    parameters:
      - name: establishmentId
        in: path
        required: true
        description: The ID of the establishment
        example: "ae68a372-285c-403b-9d0c-60db92bbc671"
        schema:
          type: string
    get:
      tags:
        - orders
      summary: Gets every order
      description: Gets a list of existing orders
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersResponse'
    post:
      tags:
        - orders
      summary: Creates a new Order
      description: Creates a new Order
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersResponse'
            
      
  /{establishmentId}/orders/{orderId}:
    parameters:
      - name: establishmentId
        in: path
        required: true
        description: The ID of the establishment
        example: "ae68a372-285c-403b-9d0c-60db92bbc671"
        schema:
          type: string
      - name: orderId
        in: path
        required: true
        description: The ID of the order
        example: "ff2470ef-2edb-4afc-ad40-9214e1777a58"
        schema:
          type: string
    get:
      tags:
        - orders
      summary: Gets order by id
      description: Update an existing order by Id
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
    put:
      tags:
        - orders
      summary: Update an existing order
      description: Update state of an existing order by Id
      requestBody:
        description: Update an existing order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPutRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
    delete:
      tags:
        - orders
      summary: Deletes an Order
      description: Deletes an order
      responses:
        '204':
          description: Successful operation

                
  /{establishmentId}/orders/{orderId}/products:
    parameters:
      - name: establishmentId
        in: path
        required: true
        description: The ID of the establishment
        example: "ae68a372-285c-403b-9d0c-60db92bbc671"
        schema:
          type: string
      - name: orderId
        in: path
        required: true
        description: The ID of the order
        example: "ff2470ef-2edb-4afc-ad40-9214e1777a58"
        schema:
          type: string    
    get:
      tags:
        - orders
      summary: Gets all products of an order
      description: Update an existing order by Id
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProductsResponse'
    post:
      tags:
        - orders
      summary: Adds product to order
      description: Creates a new product entry inside order
      requestBody:
        description: Specify id and quantity of a product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderProductPostRequest'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProductResponse'
                
  /{establishmentId}/orders/{orderId}/products/{productId}:
    parameters:
      - name: establishmentId
        in: path
        required: true
        description: The ID of the establishment
        example: "ae68a372-285c-403b-9d0c-60db92bbc671"
        schema:
          type: string
      - name: orderId
        in: path
        required: true
        description: The ID of the order
        example: "ff2470ef-2edb-4afc-ad40-9214e1777a58"
        schema:
          type: string   
      - name: productId
        in: path
        required: true
        example: "c5243a34-0e9e-40aa-b5e5-be426d9b92fd"
        schema:
          type: string
    get:
      tags:
        - orders
      summary: Gets a product of an order
      description: Gets a product of an order by Id
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProductResponse'
    put:
      tags:
        - orders
      summary: Updates a product of an order
      description: Updates a product of an order by Id
      requestBody:
        description: Change templateId or/and quantity of a product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderProductPostRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProductResponse'
    delete:
      tags:
        - orders
      summary: Deletes a product of an order
      description: Deletes a product of an order
      responses:
        '204':
          description: Successful operation
                
  /{establishmentId}/products:
    parameters:
      - name: establishmentId
        in: path
        required: true
        description: The ID of the establishment
        example: "b3a123b4-6fde-4db0-9b6a-8b77a5d5a4c5"
        schema:
          type: string
    get:
      tags:
        - products
      summary: Gets every product
      description: Retrieve a list of all products
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsResponse'
    post:
      tags:
        - products
      summary: Creates a new product
      description: Add a new product to the establishment's inventory
      requestBody:
        description: Product details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPostRequest'
      responses:
        '201':
          description: Product successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
  /{establishmentId}/products/{category}:
    parameters:
      - name: establishmentId
        in: path
        required: true
        description: The ID of the establishment
        example: "b3a123b4-6fde-4db0-9b6a-8b77a5d5a4c5"
        schema:
          type: string
      - name: category
        in: path
        required: true
        description: The category of the produc
        example: "Electronics"
        schema:
          type: string
    get:
      tags:
        - products
      summary: Get products by category
      description: Get products by category
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsResponse'
  /{establishmentId}/products/{productId}:
    parameters:
      - name: establishmentId
        in: path
        required: true
        description: The ID of the establishment
        example: "b3a123b4-6fde-4db0-9b6a-8b77a5d5a4c5"
        schema:
          type: string
      - name: productId
        in: path
        required: true
        description: The unique identifier of a product
        example: "1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p"
        schema:
          type: string
    get:
      tags:
        - products
      summary: Get specific product
      description: Retrieve details of a specific product by its ID
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
    put:
      tags:
        - products
      summary: Update a product
      description: Modify the details of a specific product
      requestBody:
        description: Updated product details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPostRequest'
      responses:
        '200':
          description: Product successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
    delete:
      tags:
        - products
      summary: Delete a product
      description: Remove a product from the establishment's inventory
      responses:
        '204':
          description: Successful operation
              
  #------------------------------------------------------------------
  
  
    
            
components:
  schemas:
    
    ProductPostRequest:
      type: object
      properties:
        product:
          type: object
          properties:
            name:
              type: "string"
              example: "Gadget Pro"
            price:
              type: "string"
              example: "199.99"
            category:
              type: "string"
              example: "Electronics"
              
    ProductResponse:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product'
    
    ProductsResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        
    Product:
      type: object
      properties:
        id:
          type: "string"
          example: "24f64272-ba94-4f08-a13f-209b33d26430"
        name:
          type: "string"
          example: "Gadget Pro"
        price:
          type: "string"
          example: "199.99"
        category:
          type: "string"
          example: "Electronics"
  
    OrderPutRequest:
      type: object
      properties:
        order:
          type: object
          properties:
            createdDateTime:
              type: "string"
              example: "2002-07-18T00:00:00"

    OrderResponse:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/Order'
          
    OrderProductsResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/OrderProduct'
    
    OrderProductResponse:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/OrderProduct'
            
    OrderProductPostRequest:
      type: object
      properties:
        product:
          type: object
          properties:
            templateId:
              type: "string"
              example: "24f64272-ba94-4f08-a13f-209b33d26430"
            quantity:
              type: "integer"
              example: 5
          
    OrdersResponse:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    Order:
      type: object
      properties:
        id:
          type: "string"
          example: "adae1b0a-d8b2-4273-b4b8-5b6f3bedff63"
        createdDateTime:
          type: "string"
          example: "2002-07-18T00:00:00"
        status:
          type: "string"
          example: "InProgress"
        products:
          type: array
          items:
            $ref: '#/components/schemas/OrderProduct'
    OrderProduct:
      type: object
      properties:
        id:
          type: "string"
          example: "fe7e1a60-98cb-49f8-9b5e-be0291de676c"
        templateId:
          type: "string"
          example: "24f64272-ba94-4f08-a13f-209b33d26430"
        name:
          type: "string"
          example: "Gadget Pro"
        price:
          type: "string"
          example: "199.99"
        category:
          type: "string"
          example: "Electronics"
        quantity:
          type: "integer"
          example: 5
